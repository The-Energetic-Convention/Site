@{
    TECDataClasses.EventInfo? event_ = (TECDataClasses.EventInfo?)ViewData["event"];
    TECDataClasses.EventInfo[] events = (TECDataClasses.EventInfo[])ViewData["events"];
    string status = (string)ViewData["status"];
    ViewData["Title"] = event_ != null ? event_.EventName : "Events";
}

<div class="text-center">

    @if (event_ == null)
    {
        <h1 class="display-4">Events</h1>
        // show event list

        <style type="text/css">
            .container {
                opacity: 1;
            }

            html, body {
                min-height: 100vh;
            }

            body {
                height: 100vh;
            }
        </style>

        <div style="opacity:1; max-height:99vh; overflow:auto; display: flex; flex-direction: row; flex-wrap:wrap;">
            <h3 style="margin-right:8vw">@ViewData["day1Date"]</h3>
            <div style="margin: 0 auto; position:relative">
                @Html.Raw(ViewData["day1Table"])
            </div>
            <div style="margin: 0 auto;">
                <table class="tg" style="undefined;table-layout: fixed; width: 200px">
                    <colgroup>
                        <col style="width: 70px">
                        <col style="width: 70px">
                        <col style="width: 70px">
                        <col style="width: 70px">
                    </colgroup>
                    <thead>
                        <tr>
                            <th class="tableLocation">LEGEND:</th>
                            <th class="Game"></th>
                            <th class="sidebarEven Everyone" style="text-align: center;" colspan="2">GAME</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td class="tableLocation" rowspan="6"></td>
                            <td class="Panel"></td>
                            <td class="sidebarOdd Everyone" style="text-align: center;" colspan="2">PANEL</td>
                        </tr>
                        <tr>
                            <td class="Special"></td>
                            <td class="sidebarEven Everyone" style="text-align: center;" colspan="2">SPECIAL</td>
                        </tr>
                        <tr>
                            <td class="GuestPanel"></td>
                            <td class="sidebarOdd Everyone" style="text-align: center;" colspan="2">GUEST PANEL</td>
                        </tr>
                        <tr>
                            <td class="GuestGame"></td>
                            <td class="sidebarEven Everyone" style="text-align: center;" colspan="2">GUEST GAME</td>
                        </tr>
                        <tr>
                            <td class="Video"></td>
                            <td class="sidebarOdd Everyone" style="text-align: center;" colspan="2">VIDEO</td>
                        </tr>
                        <tr>
                            <td class="Shop"></td>
                            <td class="sidebarEven Everyone" style="text-align: center;" colspan="2">SHOP</td>
                        </tr>
                        <tr>
                            <td class="rowEven Everyone" style="font-size: 11px">Text Colours</td>
                            <td class="rowEven Everyone" style="font-size: 11px">Everyone Event</td>
                            <td class="rowEven PG13" style="font-size: 11px">PG13 Event</td>
                            <td class="rowEven Adult" style="font-size: 11px">18+ Event</td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <h3 style="margin-right:8vw; margin-top:15px">@ViewData["day2Date"]</h3>
            <div style="margin: 0 auto; position:relative">
                @Html.Raw(ViewData["day2Table"])
            </div>
            <h3 style="margin-right:8vw; margin-top:15px">@ViewData["day3Date"]</h3>
            <div style="margin: 0 auto; position:relative">
                @Html.Raw(ViewData["day3Table"])
            </div>
        </div>

        /* old attempt at creating the schedule dynamically lol. keeping here for records
        foreach (TECDataClasses.EventInfo toAdd in events)
        {
            <p id="@toAdd.EventNumber">@toAdd.EventDate.ToString("dddd, MMM dd: h:mm tt ") <a href="@Program.domain/Events/Event/@toAdd.EventNumber"><button class="link-button-class" id="link-button" onclick="ButtonWait()">@toAdd.EventName</button></a></p>
        } */
    }
    else if (event_ != null)
    {
        // show event
        <h1 class="display-4">@event_.EventName</h1>
        if (event_.EventLink != null && event_.EventLink != "" && !event_.EventLink.Contains("vrchat.com"))
        {
            <a href="@event_.EventLink" target="_blank"><button class="link-button-class" id="link-button" onclick="ButtonWait()">Join now!</button></a>
        }

        <a href="@Program.domain/Events/Joining"><button class="link-button-class" id="link-button" onclick="ButtonWait()">How to join an event.</button></a>

        System.Text.RegularExpressions.Regex linkMatch = new System.Text.RegularExpressions.Regex(@"\[([\w\s\d]+)\]\(((?:\/|https?:\/\/)[\w\d./?=#]+)\)");
        string description = event_.EventDescription;
        System.Text.RegularExpressions.MatchCollection matches = linkMatch.Matches(description);

        foreach (System.Text.RegularExpressions.Match match in matches)
        {
            description = description.Replace(match.Value, $"<a href=\"{match.Groups[2].Value}\" target=\"_blank\">{match.Groups[1].Value}</a>");
        }

        string[] lines = description.Split("\n");
        foreach (string line in lines)
        {
            <p>@Html.Raw(line)</p>
        }

        if (event_.EventLink.Contains("vrchat.com"))
        {
            System.Text.RegularExpressions.Match instanceID = new System.Text.RegularExpressions.Regex(@"(?<=https:\/\/vrchat\.com\/home\/launch\?worldId=)[\w\d./\-]*").Match(event_.EventLink);
            var worldID = instanceID.Value;

            <div style="display:flex; flex-direction:row; justify-content:center;">
                @for (int i = 1; i < 6; i++)
                {
                    var instID = $"TEC{i}";
                    string inst = $"https://vrchat.com/home/launch?worldId={worldID}&instanceId={instID}~group(grp_68436afe-3d3a-4455-b88c-c8fa6924e4e0)~groupAccessType(members)~region(us)";
                    int instCount = 0;
                    System.Net.HttpWebRequest request = System.Net.WebRequest.CreateHttp($"https://api.vrchat.cloud/api/1/instances/{worldID}:TEC1");
                    request.Method = "GET";
                    request.UserAgent = "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36";
                    request.CookieContainer = new();
                    request.CookieContainer.Add(new System.Net.Cookie("auth", Environment.GetEnvironmentVariable("VRC_AUTH"), "/", "api.vrchat.cloud"));
                    request.KeepAlive = true;

                    try
                    {
                        System.Net.HttpWebResponse resp = (System.Net.HttpWebResponse)request.GetResponse();

                        var receiveStream = resp.GetResponseStream();
                        var readStream = new StreamReader(receiveStream, System.Text.Encoding.UTF8);
                        var json = readStream.ReadToEnd();

                        VRChat.API.Model.Instance instance = Newtonsoft.Json.JsonConvert.DeserializeObject<VRChat.API.Model.Instance>(json);
                        instCount = instance.NUsers;
                    }
                    catch (HttpRequestException e)
                    {
                        Console.WriteLine("Exception when calling InstancesApi.GetInstance: " + e.Message);
                        Console.WriteLine("Status Code: " + e.StatusCode);
                        Console.WriteLine(e.StackTrace);
                    }
                    catch (Exception e)
                    {
                        Console.WriteLine(e);
                    }

                    <a style="margin:auto 2px" href="@inst" target="_blank"><button class="link-button-class" id="link-button" onclick="ButtonWait()">Join #@i with @instCount Furs</button></a>
                }
            </div>
        }
    }

    <iframe> </iframe>

</div>
